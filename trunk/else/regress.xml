<?xml version="1.0" encoding="US-ASCII"?>
<else xmlns:perl5="perl5" xmlns:java="java">
  <!-- auto-repeat example -->

  <token>
    <name>seq-index</name>
    <description>loop iteration through an array.</description>

    <list>array name</list>

    <control>
      <perl5:prefix>$</perl5:prefix> <!-- Prefix is not yet implemented , tests filtering -->
      index variable name
    </control>

    <!-- <span> is the idea for chunks that would be loaded into named registers -->
    <perl5:body>
my $<r p="@control"/>; for ( $<r p="@control"/> = 0; $<r p="@control"/> &lt; @<r p="list"/>; $<r p="@control"/>++ ) {
}
<span name="array-ref"><r p="@list"/>[$<r p="@control"/>]</span>
    </perl5:body>

    <java:body>
      <!--
          Java section is under construction. Test filtering by NamespaceURI
      -->
    </java:body>
  </token>

  <!-- test more than one token , and repeat -->

  <token>
    <name>param</name>
    <description>naming function arguements</description>
    <lvalue>any lvalue or undef</lvalue>
<perl5:body>
 my ( <r p="lvalue" h=","/> ) = @_;
</perl5:body>
  </token>

  <!-- test recursive definition. -->
  <token>
    <name>hash</name>
    <description>naming function arguements</description>

    <token>
      <name>pair</name>
      <description>a key value pair</description>

      <key>hash key</key>
      <value>hash value</value>

      <perl5:body>
<r p="key"/> => <r p="value"/>
      </perl5:body>
    </token>

    <ident>name of the hash</ident>
<perl5:body>
my %<r p="ident"/> = (
  <r p="pair" v=","/>
);
</perl5:body>
  </token>
</else>
