Buffer-Ring

Developed by [[codermattie]]

Buffer Ring creates rings of buffers. Cycling within a buffer-ring switches to the next
buffer in the ring until it wraps around. It does not use the buffer LRU list so the
buffers within a ring are always the same until you add or delete buffers from them.

== OverView ==

This project was inspired by [[MTorus]]. I tried MTorus but it was far too complex
for my tastes. The generality complicated the interface, and the code was a labyrinth
of hooks.

In essence I wanted a ring, not a Dyson's Sphere :)

This implementation is simple, a couple of files massing only 500+ lines.

Here are the buffer-ring commands:

add/delete
* buffer-ring-add    ;;     add the buffer to a ring
* buffer-ring-delete ;;  delete a buffer from the ring

buffer rotation
* buffer-ring-prev-buffer  ;; next buffer in the ring
* buffer-ring-next-buffer  ;; previous buffer in the ring
* buffer-ring-cycle        ;; cycle buffers. Next in the ring or use other-buffer if not in
                           ;; a ring.
* buffer-ring-list-buffers ;; list the buffers in the buffer ring

global ring (torus) rotation
* buffer-torus-prev-ring   ;; previous ring
* buffer-torus-next-ring   ;; next ring
* buffer-torus-list-rings  ;; list the rings in the torus

If it is too simple for you I suggest MTorus. I will definitely not add mark rings.
set-mark-command-repeat-pop works well enough for me.

== Status ==

This is a work in progress, and not suitable for the casual user yet. The
adventerous are welcome to try it, and please report any problems you
encounter if you do [[codermattie]].

Version 0.0.2 2009-4-16

  * rename the API consistently
  * provide a working global ring implementation
  * document dynamic-ring.el
  * add default keybindings

== Download ==

* [[dynamic-ring.el]]
* [[buffer-ring.el]]
