moving stuff around
-------------------

move all networking to networking.

make sure daemon stuff is in daemons

move ssh out of shell and into networking

p4
---------------

perforce-activate needs to trigger on trying to convert a buffer
from ro -> rw as well

wc
---------------

have rcs stop mutilating the headers on checkin. this churn
will cause conflicts on every single merge.

rcs-command execute is busted. doesn't print the command that
got screwed up

lexical binding problem in command formation for local commit.
fix it now.

* financials

  move payments over to the new card.

  setup a new misinformation paypal account.

  dynadot

  runbox

  airvpn

  laptop insurance

  paypall account

  move comcast over to it.

  put a buffer in.

  start a account for cloud server space. either ronku
  or a full blown server. make sure it is in europe.

* http/privacy

  look at blocking a list of undesirable servers via
  polipo. the firewall bogs down with a long block list.

  look at other things polipo can do to lock things down
  quite a bit, or even better do some spoofing if possible
  just for fun.

* email

  generate the revoke key for the new e-mail key.

* backups

  get a cdrom backup of my encryption keys. also do a
  full password list. put it in the safe box with the
  backup drive.

  make sure the revoke key is there !!!

  move the revoke keys to external cdrom storage only.

  burn at least two cdroms.

  make sure the encrypted filesystem stuff is on
  the cdrom too.

  verify the cdrom by sha1sum. write a script to
  do it.

  also I want the keys for airvpn on there.

  find a way to backup the virtual box image.
  make it rsync not a image copy.

* merging work

  need to test external diff, external 3 way merge

* tag work

  finish the implementation and test the command queue
  stuff.

  figure out how to drive dir sets and update/refresh
  a tags table.

  make the right tags table available via the mode.
  maybe there is a variable that could be used.

  build some bindings etc.

  look into building a grep command like interface
  with the files hyperlinked so you do not have to
  do the full loop.

  do a update on a long idle timer, maybe 3 minutes.
  it adds a find -mnewer based update on the tags
  table and triggers the in emacs update.

* working copy / p4

  need to test all the working copy stuff. the various
  kinds of update operations.

  need to make sure that in every case external data
  coming in does not result in a data loss scenario.
  pushing the primary file off to local is a data loss
  since the state of local is destroyed.

  second step is to operate working copy from the
  p4 utilities. the p4 functions should be scenarios
  not just wrappers. this connection of p4 to working-copy
  is the lowest layer.

  need tree based operations. the key would be compiling
  a list of every working copy path.

  need a way in the perforce aspect to determine if a file
  is perforce managed by path.

  need a way to do file sets so operations can be set based.
  yep it is vc emulation but there is not much of a option
  outside of building a vc backend. actually that is a awesome
  idea so look into what is involved. FUCKING AWESOME IDEA.
      
* shell

  make a comand that looks for a shell/term mode.

  if found pop-to-buffer

  if not found detect bash/or zsh with executable-p

  launch the term if so and hook it into the shell ring

  make it keybound to switch to it.

* vpn.

  make it so the vpn does a discovery. loop through all of the
  servers and start the first one that works.

* networking

  finish the route replacement stuff for interfaces.

  inspect the firewalls to see if they are as tight as possible.

* security

  put the sshd on a wheel setup so only codermattie can pam authenticate.

* dired

  create a way to zap all the dired buffers.

  see if I can force all dired into a single buffer instead of creating
  one per dir.

* docs

  get it finished. determing whether the buffer can be switched to
  is wrong in the default case in which it should ignore current
  url possibly ?

* WEB

  html is going to html mode, fix that and get it into a ring. put css
  into the ring too.

* cpan

  fucking cpan. copy regular files.

  look in bin for files as well.

  figure out the auto suffix directory bullshit.

* perl

  need xsh2 now

need the virtual box high-jack of the dev-environment real fucking soon.
the broken-ness of the tools is not working anymore.

two highest priorities are perl debugging and pulling out the vm

* editing

  fix single quote in lisp

  when adjecent to text even in lisp a square bracket is inserted.
  fix this. just use the damn character i type. even better would
  be if it wrapped the word.

  this may possibly due to insert.

  figure out all the damn magic and figure out how to wrap
  a word in the given parentheses which it can do.

  get the smart insert working where it chooses to insert a pair
  or a single instance.

  doing anything local will require adding a paren to override the
  global default.

  it would be nice to insert a pair and then put the point inside
  the pair with a paren on each side.

* clojure

  get the clojure examples rounded up and on the website. see if there is
  any value to getting clojure running.

  consider getting clojure jack-in/swank going for portable stuff.

* cpan work

  finish up the cpan work with the rewrite. Once the core version is working
  I can rebuild the classic-deps functionality of building a debian package
  on top of it.

  -- the basic stuff is now working, but that auto directory is completely
     breaking everything.

* merging

  make sure multi-file merging is working correctly.

* templates

 fix perl foreach template

 build the pop-up completion interface for completing a template. it is
 the only way it will be useful.

bind pop to mark command.

* sepia/perl

  need alot of debugging work with sepia/padwalker etc... and using
  the trick from the office script.

* database

  see if there is a way to use sepia with DBI as a way to execute SQL
  repl style from a SQL mode.

* firewall

  need a easier way to open close ports. this could be in the form
  of other config's to handle load/unloads

* perl commit

  need the indentation switching stat. if a
  mode doesn't do it use a external tool. -- update: use perltidy.

* virtualbox

  work out the virtual box filesystem sharing problem. roll a driver
  package if necessary.

get eclipse set up for java, and get ahead of the game. prune out those
release branches in setting up linked folders. make them go to the trunk.

* create a ring for dired.

create wrappers for system name e.g is-linux,is-darwin

dig into the failure to reload a installed package.

finish lisp mode, get all completions, indent levels, and the
other basics done.





